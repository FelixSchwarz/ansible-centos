# This file is managed by Ansible. Don't make changes here, they will be overwritten.

# This router routes addresses that are not in local domains by doing a DNS
# lookup on the domain name. The exclamation mark that appears in "domains = !
# +local_domains" is a negating operator, that is, it can be read as "not". The
# recipient's domain must not be one of those defined by "domainlist
# local_domains" above for this router to be used.
#
# If the router is used, any domain that resolves to 0.0.0.0 or to a loopback
# interface address (127.0.0.0/8) is treated as if it had no DNS entry. Note
# that 0.0.0.0 is the same as 0.0.0.0/32, which is commonly treated as the
# local host inside the network stack. It is not 0.0.0.0/0, the default route.
# If the DNS lookup fails, no further routers are tried because of the no_more
# setting, and consequently the address is unrouteable.
dnslookup:
  driver = dnslookup
  # do not check for local domains and 'name of the local host' (@)
  # "@" is required because "qualify_domain" uses the local host name so all
  # locally generated message use it when generating a message to "root".
  # These messages should be caught by the "system_alias" router below but if
  # dnslookup matches it will fail ("remote host is the local host") and due to
  # "no_more" the message is frozen.
  # I'm assuming that there are no (remote) mailboxes for hosts like
  # "foo.schwarz.eu".
  domains = ! @ : ! +local_domains
  transport = remote_smtp
  ignore_target_hosts = 0.0.0.0 : 127.0.0.0/8
  # remove Received: headers for authenticated users (including messages
  # submitted via the commandline). $authenticated_id is empty for messages
  # generated via cron (but is true for messages submitted manually by root!)
  #
  # This is meant to prevent privacy issues (do not disclose the user's ip
  # address) but also part of the DDOS protection (if our website is protected
  # by something like CloudFlare the attacker must not be able to get our
  # real IP - but that IP would appear in email headers e.g. for new user
  # registrations).
  #
  # I decided to remove the headers in routers because doing it in the ACL
  # section seemed to be too error-prone (multiple "accept" statements,
  # it is too easy to miss one).
  # Btw: Changed list separator to "|" so we don't have to use "def::" and
  # take care of all ":" e.g. in XRECEIVED_HEADER_TEXT.
  # See also README.UPDATING in Exim 4.83:
  #      https://bugs.exim.org/show_bug.cgi?id=1507#c1
  #
  # Logic is:
  #   if received_protocol == "local" or authenticated_id:
  headers_remove = <| ${if or {{eq{$received_protocol}{local}} {def:authenticated_id}}  { Received }{} }
  headers_add = <| ${if or {{eq{$received_protocol}{local}} {def:authenticated_id}}  {X-Received: XRECEIVED_HEADER_TEXT}{} }
  no_more

