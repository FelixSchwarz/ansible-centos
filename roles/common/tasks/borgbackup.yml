---

- name: install borgbackup
  yum:
    name: borgbackup
    state: present

- name: ensure that borg target directory exists
  file: path={{ borg_target }} state=directory owner=root group=root mode=0700
  when: borg_target != "n/a"

- name: generate ssh key for root if not present
  user: >
    name=root
    generate_ssh_key=yes
    ssh_key_file=.ssh/id_rsa
    ssh_key_comment="root@{{ ansible_hostname }}"

- name: install borg wrapper script
  copy: src=borgwrapper.sh dest=/usr/local/bin/borgwrapper.sh owner=root group=root mode=0700

- name: create /root/.config
  file: path=/root/.config state=directory owner=root group=root mode=0700

- name: create /root/.config/borg
  file: path=/root/.config/borg state=directory owner=root group=root mode=0700

- name: create /root/.config/keys
  file: path=/root/.config/borg/keys state=directory owner=root group=root mode=0700

- name: copy borg key
  copy:
    src:  "host_files/{{ inventory_hostname }}/{{ BORG_KEYFILE }}"
    dest: /root/.config/borg/keys/
    owner: root
    group: root
    mode: 0600
  when: BORG_KEYFILE is defined and BORG_KEYFILE
  tags: borg

# no attempt to initialize a borg repository - this seems too much hassle
# right now as it is only done once per server. Also often there are
# backend-specific preparations to do (e.g. creating a directory on the backup
# server).

- name: generate borg script
  template: src=run-borg-backup.sh.j2 dest=/usr/local/bin/run-borg-backup.sh owner=root group=root mode=0700

- cron:
    name: "run borg backup"
    hour: "{{ borg_schedule_hour | default(2) }}"
    minute: "{{ borg_schedule_minute | default(10) }}"
    job: "/usr/local/bin/run-borg-backup.sh"


