---

- set_fact: hostname_letsencrypt={{ letsencrypt_host_domains[0] }}
  when: use_letsencrypt_cert

- name: install letsencrypt package
  yum: name={{ item }} state=present
  with_items:
    - letsencrypt

# needed to for acme challenges
- name: open port 80 in the firewall
  firewalld: port=80/tcp permanent=true immediate=true state=enabled
  when: use_letsencrypt_cert

# /etc/letsencrypt is owned by the letsencrypt rpm but only created when the
# program is executed for the first time. I'd like to put the client.ini in
# /etc/letsencrypt (see below) so we need to create the directory first.
- name: create /etc/letsencrypt
  file: path=/etc/letsencrypt state=directory owner=root group=root mode=0755

# jinja2 template so we can have a dynamic admin email address
- name: generate client.ini
  template: src=letsencrypt.ini.j2 dest={{ letsencrypt_ini_path }} owner=root group=root mode=0640

- name: create directory for "on renew" scripts
  file: path=/etc/letsencrypt/renew.d state=directory mode=0700

- name: copy "after-new" master script
  copy:  >
    src=after-renew
    dest=/etc/letsencrypt/after-renew
    owner=root group=root
    mode=0755


# ,--- prepare webroot-based authentication ------------------------------------
- name: create /srv/letsencrypt
  file: path=/srv/letsencrypt state=directory mode=0755

# create a fake webroot where we can point to in the letsencrypt ini
- name: create /srv/letsencrypt/fake-webroot
  file: path=/srv/letsencrypt/fake-webroot state=directory mode=0755

- name: create fake-webroot/.well-known
  file: path=/srv/letsencrypt/fake-webroot/.well-known state=directory mode=0755

- name: create fake-webroot/.well-known
  file: path=/srv/letsencrypt/fake-webroot/.well-known state=directory mode=0755

# mode=0755: I think the acme-challenge should not contain sensitive
# information - in the end they are transmitted with plain HTTP anyway...
- name: create fake-webroot/.well-known/acme-challenge
  file: path=/srv/letsencrypt/fake-webroot/.well-known/acme-challenge state=directory mode=0755

# `--- prepare webroot-based authentication ------------------------------------

- include: fetch_certificate.yml

