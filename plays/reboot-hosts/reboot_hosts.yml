---
- hosts: all:!localhost
  gather_facts: true
  remote_user: root
  serial: 1 # only reboot one host at a time
  any_errors_fatal: true
  tasks:

  - name: Uptime
    command: uptime
    register: uptime

  - debug: var=uptime.stdout_lines
  
  # RHEL6: shutdown only accepts -r and waits until the timeout expires
  # RHEL7: shutdown also accepts --reboot and will terminate immediately
  # Cannot use reboot as that fires immediately and terminates the SSH connection.
  # this will fail the task even if ignore_errors: true
  - name: Reboot in one minute
    shell: shutdown -r +1 "Ansible triggered reboot" &
    # when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"
  
  - name: Wait for server to come back
    local_action: "wait_for host={{ansible_ssh_host | default(inventory_hostname)}} port=22  delay=80 state=present"
    # when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"
    
  - debug: "msg=host has rebooted"
    # when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"

  - name: Show uptime
    command: uptime
    register: uptime

  - debug: var=uptime.stdout_lines
